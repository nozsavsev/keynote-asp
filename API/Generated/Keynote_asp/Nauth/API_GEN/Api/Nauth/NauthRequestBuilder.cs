// <auto-generated/>
#pragma warning disable CS0618
using Keynote_asp.Nauth.API_GEN.Api.Nauth.CreateServicePermission;
using Keynote_asp.Nauth.API_GEN.Api.Nauth.CurrentService;
using Keynote_asp.Nauth.API_GEN.Api.Nauth.DecodeUserToken;
using Keynote_asp.Nauth.API_GEN.Api.Nauth.DeleteServicePermission;
using Keynote_asp.Nauth.API_GEN.Api.Nauth.FetchUsers;
using Keynote_asp.Nauth.API_GEN.Api.Nauth.GetUserById;
using Keynote_asp.Nauth.API_GEN.Api.Nauth.GetUserBySessionId;
using Keynote_asp.Nauth.API_GEN.Api.Nauth.UpdateUserPermissions;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Keynote_asp.Nauth.API_GEN.Api.Nauth
{
    /// <summary>
    /// Builds and executes requests for operations under \api\Nauth
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class NauthRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The createServicePermission property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.Nauth.CreateServicePermission.CreateServicePermissionRequestBuilder CreateServicePermission
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.Nauth.CreateServicePermission.CreateServicePermissionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The currentService property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.Nauth.CurrentService.CurrentServiceRequestBuilder CurrentService
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.Nauth.CurrentService.CurrentServiceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The decodeUserToken property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.Nauth.DecodeUserToken.DecodeUserTokenRequestBuilder DecodeUserToken
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.Nauth.DecodeUserToken.DecodeUserTokenRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deleteServicePermission property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.Nauth.DeleteServicePermission.DeleteServicePermissionRequestBuilder DeleteServicePermission
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.Nauth.DeleteServicePermission.DeleteServicePermissionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The fetchUsers property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.Nauth.FetchUsers.FetchUsersRequestBuilder FetchUsers
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.Nauth.FetchUsers.FetchUsersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getUserById property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.Nauth.GetUserById.GetUserByIdRequestBuilder GetUserById
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.Nauth.GetUserById.GetUserByIdRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getUserBySessionId property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.Nauth.GetUserBySessionId.GetUserBySessionIdRequestBuilder GetUserBySessionId
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.Nauth.GetUserBySessionId.GetUserBySessionIdRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The updateUserPermissions property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.Nauth.UpdateUserPermissions.UpdateUserPermissionsRequestBuilder UpdateUserPermissions
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.Nauth.UpdateUserPermissions.UpdateUserPermissionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Keynote_asp.Nauth.API_GEN.Api.Nauth.NauthRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public NauthRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/Nauth", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Keynote_asp.Nauth.API_GEN.Api.Nauth.NauthRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public NauthRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/Nauth", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
