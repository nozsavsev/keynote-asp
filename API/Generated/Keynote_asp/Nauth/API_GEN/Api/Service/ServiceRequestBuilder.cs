// <auto-generated/>
#pragma warning disable CS0618
using Keynote_asp.Nauth.API_GEN.Api.Service.Create;
using Keynote_asp.Nauth.API_GEN.Api.Service.Delete;
using Keynote_asp.Nauth.API_GEN.Api.Service.GetAllGlobal;
using Keynote_asp.Nauth.API_GEN.Api.Service.GetAllOwned;
using Keynote_asp.Nauth.API_GEN.Api.Service.GetSession;
using Keynote_asp.Nauth.API_GEN.Api.Service.GetbyId;
using Keynote_asp.Nauth.API_GEN.Api.Service.Update;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Keynote_asp.Nauth.API_GEN.Api.Service
{
    /// <summary>
    /// Builds and executes requests for operations under \api\Service
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ServiceRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The create property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.Service.Create.CreateRequestBuilder Create
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.Service.Create.CreateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deletePath property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.Service.Delete.DeleteRequestBuilder DeletePath
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.Service.Delete.DeleteRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getAllGlobal property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.Service.GetAllGlobal.GetAllGlobalRequestBuilder GetAllGlobal
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.Service.GetAllGlobal.GetAllGlobalRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getAllOwned property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.Service.GetAllOwned.GetAllOwnedRequestBuilder GetAllOwned
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.Service.GetAllOwned.GetAllOwnedRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getbyId property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.Service.GetbyId.GetbyIdRequestBuilder GetbyId
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.Service.GetbyId.GetbyIdRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getSession property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.Service.GetSession.GetSessionRequestBuilder GetSession
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.Service.GetSession.GetSessionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The update property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.Service.Update.UpdateRequestBuilder Update
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.Service.Update.UpdateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Keynote_asp.Nauth.API_GEN.Api.Service.ServiceRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ServiceRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/Service", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Keynote_asp.Nauth.API_GEN.Api.Service.ServiceRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ServiceRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/Service", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
