// <auto-generated/>
#pragma warning disable CS0618
using Keynote_asp.Nauth.API_GEN.Api.UserManagement.ChangeEmailRequest;
using Keynote_asp.Nauth.API_GEN.Api.UserManagement.DeleteAccountRequest;
using Keynote_asp.Nauth.API_GEN.Api.UserManagement.DeleteUser;
using Keynote_asp.Nauth.API_GEN.Api.UserManagement.DisableUser;
using Keynote_asp.Nauth.API_GEN.Api.UserManagement.EnableUser;
using Keynote_asp.Nauth.API_GEN.Api.UserManagement.FetchPermissions;
using Keynote_asp.Nauth.API_GEN.Api.UserManagement.FetchUsers;
using Keynote_asp.Nauth.API_GEN.Api.UserManagement.ForceUnVerifyEmail;
using Keynote_asp.Nauth.API_GEN.Api.UserManagement.ForceVerifyEmail;
using Keynote_asp.Nauth.API_GEN.Api.UserManagement.NeutralizeEmailAction;
using Keynote_asp.Nauth.API_GEN.Api.UserManagement.PasswordResetRequest;
using Keynote_asp.Nauth.API_GEN.Api.UserManagement.RevokeAllUserSessions;
using Keynote_asp.Nauth.API_GEN.Api.UserManagement.SetUserEmail;
using Keynote_asp.Nauth.API_GEN.Api.UserManagement.SetUserPassword;
using Keynote_asp.Nauth.API_GEN.Api.UserManagement.UpdatePermissions;
using Keynote_asp.Nauth.API_GEN.Api.UserManagement.UpdateUserName;
using Keynote_asp.Nauth.API_GEN.Api.UserManagement.VerifyEmailRequest;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Keynote_asp.Nauth.API_GEN.Api.UserManagement
{
    /// <summary>
    /// Builds and executes requests for operations under \api\UserManagement
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class UserManagementRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The changeEmailRequest property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.ChangeEmailRequest.ChangeEmailRequestRequestBuilder ChangeEmailRequest
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.ChangeEmailRequest.ChangeEmailRequestRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deleteAccountRequest property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.DeleteAccountRequest.DeleteAccountRequestRequestBuilder DeleteAccountRequest
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.DeleteAccountRequest.DeleteAccountRequestRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deleteUser property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.DeleteUser.DeleteUserRequestBuilder DeleteUser
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.DeleteUser.DeleteUserRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The disableUser property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.DisableUser.DisableUserRequestBuilder DisableUser
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.DisableUser.DisableUserRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The enableUser property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.EnableUser.EnableUserRequestBuilder EnableUser
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.EnableUser.EnableUserRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The fetchPermissions property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.FetchPermissions.FetchPermissionsRequestBuilder FetchPermissions
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.FetchPermissions.FetchPermissionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The fetchUsers property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.FetchUsers.FetchUsersRequestBuilder FetchUsers
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.FetchUsers.FetchUsersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The forceUnVerifyEmail property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.ForceUnVerifyEmail.ForceUnVerifyEmailRequestBuilder ForceUnVerifyEmail
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.ForceUnVerifyEmail.ForceUnVerifyEmailRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The forceVerifyEmail property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.ForceVerifyEmail.ForceVerifyEmailRequestBuilder ForceVerifyEmail
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.ForceVerifyEmail.ForceVerifyEmailRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The neutralizeEmailAction property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.NeutralizeEmailAction.NeutralizeEmailActionRequestBuilder NeutralizeEmailAction
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.NeutralizeEmailAction.NeutralizeEmailActionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The passwordResetRequest property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.PasswordResetRequest.PasswordResetRequestRequestBuilder PasswordResetRequest
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.PasswordResetRequest.PasswordResetRequestRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The revokeAllUserSessions property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.RevokeAllUserSessions.RevokeAllUserSessionsRequestBuilder RevokeAllUserSessions
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.RevokeAllUserSessions.RevokeAllUserSessionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The setUserEmail property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.SetUserEmail.SetUserEmailRequestBuilder SetUserEmail
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.SetUserEmail.SetUserEmailRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The setUserPassword property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.SetUserPassword.SetUserPasswordRequestBuilder SetUserPassword
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.SetUserPassword.SetUserPasswordRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The updatePermissions property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.UpdatePermissions.UpdatePermissionsRequestBuilder UpdatePermissions
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.UpdatePermissions.UpdatePermissionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The updateUserName property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.UpdateUserName.UpdateUserNameRequestBuilder UpdateUserName
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.UpdateUserName.UpdateUserNameRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The verifyEmailRequest property</summary>
        public global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.VerifyEmailRequest.VerifyEmailRequestRequestBuilder VerifyEmailRequest
        {
            get => new global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.VerifyEmailRequest.VerifyEmailRequestRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.UserManagementRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public UserManagementRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/UserManagement", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Keynote_asp.Nauth.API_GEN.Api.UserManagement.UserManagementRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public UserManagementRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/UserManagement", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
