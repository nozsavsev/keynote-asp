// <auto-generated/>
#pragma warning disable CS0618
using Keynote_asp.Nauth.API_GEN.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Keynote_asp.Nauth.API_GEN.Api.EmailActions.EmailSignInRequest
{
    /// <summary>
    /// Builds and executes requests for operations under \api\EmailActions\emailSignInRequest
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class EmailSignInRequestRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Keynote_asp.Nauth.API_GEN.Api.EmailActions.EmailSignInRequest.EmailSignInRequestRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public EmailSignInRequestRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/EmailActions/emailSignInRequest{?email*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Keynote_asp.Nauth.API_GEN.Api.EmailActions.EmailSignInRequest.EmailSignInRequestRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public EmailSignInRequestRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/EmailActions/emailSignInRequest{?email*}", rawUrl)
        {
        }
        /// <returns>A <see cref="global::Keynote_asp.Nauth.API_GEN.Models.RequestEmailActionResponseResponseWrapper"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Keynote_asp.Nauth.API_GEN.Models.RequestEmailActionResponseResponseWrapper?> PostAsync(Action<RequestConfiguration<global::Keynote_asp.Nauth.API_GEN.Api.EmailActions.EmailSignInRequest.EmailSignInRequestRequestBuilder.EmailSignInRequestRequestBuilderPostQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Keynote_asp.Nauth.API_GEN.Models.RequestEmailActionResponseResponseWrapper> PostAsync(Action<RequestConfiguration<global::Keynote_asp.Nauth.API_GEN.Api.EmailActions.EmailSignInRequest.EmailSignInRequestRequestBuilder.EmailSignInRequestRequestBuilderPostQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToPostRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::Keynote_asp.Nauth.API_GEN.Models.RequestEmailActionResponseResponseWrapper>(requestInfo, global::Keynote_asp.Nauth.API_GEN.Models.RequestEmailActionResponseResponseWrapper.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(Action<RequestConfiguration<global::Keynote_asp.Nauth.API_GEN.Api.EmailActions.EmailSignInRequest.EmailSignInRequestRequestBuilder.EmailSignInRequestRequestBuilderPostQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(Action<RequestConfiguration<global::Keynote_asp.Nauth.API_GEN.Api.EmailActions.EmailSignInRequest.EmailSignInRequestRequestBuilder.EmailSignInRequestRequestBuilderPostQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json, text/plain;q=0.9");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Keynote_asp.Nauth.API_GEN.Api.EmailActions.EmailSignInRequest.EmailSignInRequestRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Keynote_asp.Nauth.API_GEN.Api.EmailActions.EmailSignInRequest.EmailSignInRequestRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Keynote_asp.Nauth.API_GEN.Api.EmailActions.EmailSignInRequest.EmailSignInRequestRequestBuilder(rawUrl, RequestAdapter);
        }
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        #pragma warning disable CS1591
        public partial class EmailSignInRequestRequestBuilderPostQueryParameters 
        #pragma warning restore CS1591
        {
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("email")]
            public string? Email { get; set; }
#nullable restore
#else
            [QueryParameter("email")]
            public string Email { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class EmailSignInRequestRequestBuilderPostRequestConfiguration : RequestConfiguration<global::Keynote_asp.Nauth.API_GEN.Api.EmailActions.EmailSignInRequest.EmailSignInRequestRequestBuilder.EmailSignInRequestRequestBuilderPostQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
