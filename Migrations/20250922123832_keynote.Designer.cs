// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using keynote_asp.DbContexts;

#nullable disable

namespace keynote_asp.Migrations
{
    [DbContext(typeof(KeynoteDbContext))]
    [Migration("20250922123832_keynote")]
    partial class keynote
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("keynote_asp.Models.Keynote.DB_Keynote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("KeynoteUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MobileKeynoteUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PresentorNotesUrl")
                        .HasColumnType("text");

                    b.Property<int>("TransitionType")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Keynotes");
                });

            modelBuilder.Entity("keynote_asp.Models.User.DB_User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("keynote_asp.Models.Keynote.DB_Keynote", b =>
                {
                    b.HasOne("keynote_asp.Models.User.DB_User", "User")
                        .WithMany("keynotes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("keynote_asp.Models.User.DB_User", b =>
                {
                    b.Navigation("keynotes");
                });
#pragma warning restore 612, 618
        }
    }
}
